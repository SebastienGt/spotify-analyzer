{"version":3,"sources":["utils/stylesheet.module.css","utils/index.js","spotify/index.js","styles/theme.js","utils/spotify_logo.png","components/LoginScreen.js","components/User.js","Lyrics/main.js","styles/mixins.js","components/Loader.js","components/CurrentPlaying.js","components/UserProfile.js","components/Nav.js","components/UserInfo.js","components/Playlist.js","components/Artist.js","components/Accueil.js","components/Stats.js","components/App.js","components/Start.js","reportWebVitals.js","index.js"],"names":["module","exports","catchErrors","fn","catch","err","console","error","setLocalAccessToken","token","window","localStorage","setItem","Date","now","getLocalRefreshToken","getItem","refreshAccessToken","a","axios","get","data","access_token","location","reload","e","hashParams","r","q","hash","substring","exec","decodeURIComponent","getHashParams","refresh_token","warn","localAccessToken","localRefreshToken","setLocalRefreshToken","getAccessToken","logout","removeItem","headers","Authorization","getTrack","trackId","getTrackAudioAnalysis","getTrackAudioFeatures","getUserInfo","all","then","spread","user","followedArtists","playlists","topArtists","topTracks","theme","colors","green","offGreen","blue","navBlack","black","white","lightestGrey","lightGrey","grey","darkGrey","fonts","primary","fontSizes","base","xs","sm","md","lg","xl","xxl","spacing","easing","easeInCubic","easeOutCubic","easeInOutCubic","easeInExpo","easeOutExpo","easeInOutExpo","easeInBack","easeOutBack","easeInOutBack","transition","navWidth","navHeight","LoginButton","styled","LoginScreen","className","stylesheet","header","logo","src","alt","width","height","align","login","href","User","useState","setUser","useEffect","fetchData","images","url","display_name","email","followers","total","getLyr","Author","title","h","apiURL","response","mixins","flexCenter","css","flexBetween","engulf","outline","overflowEllipsis","coverShadow","button","greenButton","Container","div","dance","keyframes","Bars","Bar","props","delay","Loader","CurrentPlaying","Playing","setCurrentPlaying","Lyrics","setLyrics","Features","setFeatures","time","setTime","item","id","artists","name","log","lyrics","track","audioAnalysis","audioFeatures","interval","setInterval","clearInterval","row","columnLeft","current","songPlaying","album","danceability","energy","key","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","columnRight","noScrollDiv","split","map","line","i","UserProfile","loginButton","onClick","isActive","isCurrent","nav","Menu","ul","MenuItem","li","MenuHeader","NavLink","getProps","Nav","to","class","UserInfo","Playlist","Artist","setArtists","items","toString","Accueil","Stats","tracks","setTracks","App","content","path","AppContainer","Start","accessToken","setAccessToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d816f15e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"stylesheet_logo__2uEl9\",\"header\":\"stylesheet_header__3Nf3I\",\"centerImage\":\"stylesheet_centerImage__1aUbr\",\"loginButton\":\"stylesheet_loginButton__3Ewfh\",\"button\":\"stylesheet_button__3cuJq\",\"login\":\"stylesheet_login__1D8sD\",\"Login\":\"stylesheet_Login__1OvL9\",\"liste\":\"stylesheet_liste__1rscz\",\"items\":\"stylesheet_items__1GDcS\",\"btn\":\"stylesheet_btn__3Yvdg\",\"playing\":\"stylesheet_playing__20ONC\",\"content\":\"stylesheet_content__3Lc_Y\",\"row\":\"stylesheet_row__3bIFG\",\"columnLeft\":\"stylesheet_columnLeft__33S5v\",\"columnRight\":\"stylesheet_columnRight__2tSP2\",\"noScrollDiv\":\"stylesheet_noScrollDiv__1NV1U\",\"songPlaying\":\"stylesheet_songPlaying__1X6AL\"};","// Get the query params off the window's URL\r\nexport const getHashParams = () => {\r\n    const hashParams = {};\r\n    let e;\r\n    const r = /([^&;=]+)=?([^&;]*)/g;\r\n    const q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    return hashParams;\r\n  };\r\n  \r\n  // Format milliseconds into MM:SS\r\n  export const formatDuration = millis => {\r\n    const minutes = Math.floor(millis / 60000);\r\n    const seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  };\r\n  \r\n  // Format milliseconds into X minutes and Y seconds\r\n  export const formatDurationForHumans = millis => {\r\n    const minutes = Math.floor(millis / 60000);\r\n    const seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return `${minutes} Mins ${seconds} Secs`;\r\n  };\r\n  \r\n  // Get year from YYYY-MM-DD\r\n  export const getYear = date => date.split('-')[0];\r\n  \r\n  // Transform Pitch Class Notation to string\r\n  export const parsePitchClass = note => {\r\n    let key = note;\r\n  \r\n    switch (note) {\r\n      case 0:\r\n        key = 'C';\r\n        break;\r\n      case 1:\r\n        key = 'D♭';\r\n        break;\r\n      case 2:\r\n        key = 'D';\r\n        break;\r\n      case 3:\r\n        key = 'E♭';\r\n        break;\r\n      case 4:\r\n        key = 'E';\r\n        break;\r\n      case 5:\r\n        key = 'F';\r\n        break;\r\n      case 6:\r\n        key = 'G♭';\r\n        break;\r\n      case 7:\r\n        key = 'G';\r\n        break;\r\n      case 8:\r\n        key = 'A♭';\r\n        break;\r\n      case 9:\r\n        key = 'A';\r\n        break;\r\n      case 10:\r\n        key = 'B♭';\r\n        break;\r\n      case 11:\r\n        key = 'B';\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  \r\n    return key;\r\n  };\r\n  \r\n  export const formatWithCommas = n => n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  \r\n  // Higher-order function for async/await error handling\r\n  export const catchErrors = fn =>\r\n    function(...args) {\r\n      return fn(...args).catch(err => {\r\n        console.error(err);\r\n      });\r\n    };\r\n  ","import axios from 'axios';\r\nimport { getHashParams } from '../utils';\r\n\r\n// TOKENS ******************************************************************************************\r\nconst EXPIRATION_TIME = 3600 * 1000; // 3600 seconds * 1000 = 1 hour in milliseconds\r\n\r\nconst setTokenTimestamp = () => window.localStorage.setItem('spotify_token_timestamp', Date.now());\r\nconst setLocalAccessToken = token => {\r\n  setTokenTimestamp();\r\n  window.localStorage.setItem('spotify_access_token', token);\r\n};\r\nconst setLocalRefreshToken = token => window.localStorage.setItem('spotify_refresh_token', token);\r\nconst getTokenTimestamp = () => window.localStorage.getItem('spotify_token_timestamp');\r\nconst getLocalAccessToken = () => window.localStorage.getItem('spotify_access_token');\r\nconst getLocalRefreshToken = () => window.localStorage.getItem('spotify_refresh_token');\r\n\r\n// Refresh the token\r\nconst refreshAccessToken = async () => {\r\n  try {\r\n    const { data } = await axios.get(`/refresh_token?refresh_token=${getLocalRefreshToken()}`);\r\n    const { access_token } = data;\r\n    setLocalAccessToken(access_token);\r\n    window.location.reload();\r\n    return;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n// Get access token off of query params (called on application init)\r\nexport const getAccessToken = () => {\r\n  const { error, access_token, refresh_token } = getHashParams();\r\n\r\n  if (error) {\r\n    console.error(error);\r\n    refreshAccessToken();\r\n  }\r\n\r\n  // If token has expired\r\n  if (Date.now() - getTokenTimestamp() > EXPIRATION_TIME) {\r\n    console.warn('Access token has expired, refreshing...');\r\n    refreshAccessToken();\r\n  }\r\n\r\n  const localAccessToken = getLocalAccessToken();\r\n  const localRefreshToken = getLocalRefreshToken();\r\n\r\n  // If there is no REFRESH token in local storage, set it as `refresh_token` from params\r\n  if (!localRefreshToken || localRefreshToken === 'undefined') {\r\n    setLocalRefreshToken(refresh_token);\r\n  }\r\n\r\n  // If there is no ACCESS token in local storage, set it and return `access_token` from params\r\n  if (!localAccessToken || localAccessToken === 'undefined') {\r\n    setLocalAccessToken(access_token);\r\n    return access_token;\r\n  }\r\n\r\n  return localAccessToken;\r\n};\r\n\r\nexport const token = getAccessToken();\r\n\r\nexport const logout = () => {\r\n  window.localStorage.removeItem('spotify_token_timestamp');\r\n  window.localStorage.removeItem('spotify_access_token');\r\n  window.localStorage.removeItem('spotify_refresh_token');\r\n  window.location.reload();\r\n};\r\n\r\n// API CALLS ***************************************************************************************\r\n\r\nconst headers = {\r\n  Authorization: `Bearer ${token}`,\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\n/**\r\n * Get Current User's Profile\r\n * https://developer.spotify.com/documentation/web-api/reference/users-profile/get-current-users-profile/\r\n */\r\nexport const getUser = () => axios.get('https://api.spotify.com/v1/me', { headers });\r\n\r\nexport function GetTheUser() {\r\n    return axios.get('https://api.spotify.com/v1/me', { headers }).then(response => response.data);\r\n}\r\n\r\n/**\r\n * Get User's Followed Artists\r\n * https://developer.spotify.com/documentation/web-api/reference/follow/get-followed/\r\n */\r\nexport const getFollowing = () =>\r\n  axios.get('https://api.spotify.com/v1/me/following?type=artist', { headers });\r\n\r\n/**\r\n * Get Current User's Recently Played Tracks\r\n * https://developer.spotify.com/documentation/web-api/reference/player/get-recently-played/\r\n */\r\nexport const getRecentlyPlayed = () =>\r\n  axios.get('https://api.spotify.com/v1/me/player/recently-played', { headers });\r\n\r\n\r\n/*SEb*/\r\nexport const getCurrentPlaying = () =>\r\n  axios.get('https://api.spotify.com/v1/me/player/currently-playing', { headers });\r\n\r\n\r\nexport const setNextPlaying = () =>\r\n  axios.post('https://api.spotify.com/v1/me/player/next', { headers });\r\n\r\nexport const setPause = () =>\r\n  axios.put('https://api.spotify.com/v1/me/player/play', { headers });\r\n/**\r\n * Get a List of Current User's Playlists\r\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-a-list-of-current-users-playlists/\r\n */\r\nexport const getPlaylists = () => axios.get('https://api.spotify.com/v1/me/playlists', { headers });\r\n\r\n/**\r\n * Get a User's Top Artists\r\n * https://developer.spotify.com/documentation/web-api/reference/personalization/get-users-top-artists-and-tracks/\r\n */\r\nexport const getTopArtistsShort = () =>\r\n  axios.get('https://api.spotify.com/v1/me/top/artists?limit=50&time_range=short_term', {\r\n    headers,\r\n  });\r\nexport const getTopArtistsMedium = () =>\r\n  axios.get('https://api.spotify.com/v1/me/top/artists?limit=50&time_range=medium_term', {\r\n    headers,\r\n  });\r\nexport const getTopArtistsLong = () =>\r\n  axios.get('https://api.spotify.com/v1/me/top/artists?limit=50&time_range=long_term', { headers });\r\n\r\n/**\r\n * Get a User's Top Tracks\r\n * https://developer.spotify.com/documentation/web-api/reference/personalization/get-users-top-artists-and-tracks/\r\n */\r\nexport const getTopTracksShort = () =>\r\n  //axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50&time_range=short_term', { headers });\r\n  axios.get('https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=50&offset=5', { headers });\r\n \r\nexport const getTopTracksMedium = () =>\r\n  axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50&time_range=medium_term', {\r\n    headers,\r\n  });\r\nexport const getTopTracksLong = () =>\r\n  axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50&time_range=long_term', { headers });\r\n\r\n/**\r\n * Get an Artist\r\n * https://developer.spotify.com/documentation/web-api/reference/artists/get-artist/\r\n */\r\nexport const getArtist = artistId =>\r\n  axios.get(`https://api.spotify.com/v1/artists/${artistId}`, { headers });\r\n\r\n/**\r\n * Follow an Artist\r\n * https://developer.spotify.com/documentation/web-api/reference/follow/follow-artists-users/\r\n */\r\nexport const followArtist = artistId => {\r\n  const url = `https://api.spotify.com/v1/me/following?type=artist&ids=${artistId}`;\r\n  return axios({ method: 'put', url, headers });\r\n};\r\n\r\n/**\r\n * Check if Current User Follows Artists\r\n * https://developer.spotify.com/documentation/web-api/reference/follow/follow-artists-users/\r\n */\r\nexport const doesUserFollowArtist = artistId =>\r\n  axios.get(`https://api.spotify.com/v1/me/following/contains?type=artist&ids=${artistId}`, {\r\n    headers,\r\n  });\r\n\r\n/**\r\n * Check if Users Follow a Playlist\r\n * https://developer.spotify.com/documentation/web-api/reference/follow/follow-artists-users/\r\n */\r\nexport const doesUserFollowPlaylist = (playlistId, userId) =>\r\n  axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/followers/contains?ids=${userId}`, {\r\n    headers,\r\n  });\r\n\r\n/**\r\n * Create a Playlist (The playlist will be empty until you add tracks)\r\n * https://developer.spotify.com/documentation/web-api/reference/playlists/create-playlist/\r\n */\r\nexport const createPlaylist = (userId, name) => {\r\n  const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\r\n  const data = JSON.stringify({ name });\r\n  return axios({ method: 'post', url, headers, data });\r\n};\r\n\r\n/**\r\n * Add Tracks to a Playlist\r\n * https://developer.spotify.com/documentation/web-api/reference/playlists/add-tracks-to-playlist/\r\n */\r\nexport const addTracksToPlaylist = (playlistId, uris) => {\r\n  const url = `https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${uris}`;\r\n  return axios({ method: 'post', url, headers });\r\n};\r\n\r\n/**\r\n * Follow a Playlist\r\n * https://developer.spotify.com/documentation/web-api/reference/follow/follow-playlist/\r\n */\r\nexport const followPlaylist = playlistId => {\r\n  const url = `https://api.spotify.com/v1/playlists/${playlistId}/followers`;\r\n  return axios({ method: 'put', url, headers });\r\n};\r\n\r\n/**\r\n * Get a Playlist\r\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-playlist/\r\n */\r\nexport const getPlaylist = playlistId =>\r\n  axios.get(`https://api.spotify.com/v1/playlists/${playlistId}`, { headers });\r\n\r\n/**\r\n * Get a Playlist's Tracks\r\n * https://developer.spotify.com/documentation/web-api/reference/playlists/get-playlists-tracks/\r\n */\r\nexport const getPlaylistTracks = playlistId =>\r\n  axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, { headers });\r\n\r\n/**\r\n * Return a comma separated string of track IDs from the given array of tracks\r\n */\r\nconst getTrackIds = tracks => tracks.map(({ track }) => track.id).join(',');\r\n\r\n/**\r\n * Get Audio Features for Several Tracks\r\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-several-audio-features/\r\n */\r\nexport const getAudioFeaturesForTracks = tracks => {\r\n  const ids = getTrackIds(tracks);\r\n  return axios.get(`https://api.spotify.com/v1/audio-features?ids=${ids}`, { headers });\r\n};\r\n\r\nexport const getAudioFeaturesForID = id => {\r\n  return axios.get(`https://api.spotify.com/v1/audio-features?ids=${id}`, { headers });\r\n}\r\n\r\n/**\r\n * Get Recommendations Based on Seeds\r\n * https://developer.spotify.com/documentation/web-api/reference/browse/get-recommendations/\r\n */\r\nexport const getRecommendationsForTracks = tracks => {\r\n  const shuffledTracks = tracks.sort(() => 0.5 - Math.random());\r\n  const seed_tracks = getTrackIds(shuffledTracks.slice(0, 5));\r\n  const seed_artists = '';\r\n  const seed_genres = '';\r\n\r\n  return axios.get(\r\n    `https://api.spotify.com/v1/recommendations?seed_tracks=${seed_tracks}&seed_artists=${seed_artists}&seed_genres=${seed_genres}`,\r\n    {\r\n      headers,\r\n    },\r\n  );\r\n};\r\n\r\n/**\r\n * Get a Track\r\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-track/\r\n */\r\nexport const getTrack = trackId =>\r\n  axios.get(`https://api.spotify.com/v1/tracks/${trackId}`, { headers });\r\n\r\n/**\r\n * Get Audio Analysis for a Track\r\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-analysis/\r\n */\r\nexport const getTrackAudioAnalysis = trackId =>\r\n  axios.get(`https://api.spotify.com/v1/audio-analysis/${trackId}`, { headers });\r\n\r\n/**\r\n * Get Audio Features for a Track\r\n * https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-features/\r\n */\r\nexport const getTrackAudioFeatures = trackId =>\r\n  axios.get(`https://api.spotify.com/v1/audio-features/${trackId}`, { headers });\r\n\r\nexport const getUserInfo = () =>\r\n  axios\r\n    .all([getUser(), getFollowing(), getPlaylists(), getTopArtistsLong(), getTopTracksLong()])\r\n    .then(\r\n      axios.spread((user, followedArtists, playlists, topArtists, topTracks) => ({\r\n        user: user.data,\r\n        followedArtists: followedArtists.data,\r\n        playlists: playlists.data,\r\n        topArtists: topArtists.data,\r\n        topTracks: topTracks.data,\r\n      })),\r\n    );\r\n\r\nexport const getTrackInfo = trackId =>\r\n  axios\r\n    .all([getTrack(trackId), getTrackAudioAnalysis(trackId), getTrackAudioFeatures(trackId)])\r\n    .then(\r\n      axios.spread((track, audioAnalysis, audioFeatures) => ({\r\n        track: track.data,\r\n        audioAnalysis: audioAnalysis.data,\r\n        audioFeatures: audioFeatures.data,\r\n      })),\r\n    );\r\n\r\n","const theme = {\r\n    colors: {\r\n      green: '#1DB954',\r\n      offGreen: '#1ed760',\r\n      blue: '#509bf5',\r\n      navBlack: '#040306',\r\n      black: '#191414',\r\n      white: '#FFFFFF',\r\n      lightestGrey: '#b3b3b3',\r\n      lightGrey: '#c4c4c4',\r\n      grey: '#404040',\r\n      darkGrey: '#282828',\r\n    },\r\n  \r\n    fonts: {\r\n      primary: 'Circular Std, system, -apple-system, BlinkMacSystemFont, sans-serif',\r\n    },\r\n  \r\n    fontSizes: {\r\n      base: `16px`,\r\n      xs: `12px`,\r\n      sm: `14px`,\r\n      md: `20px`,\r\n      lg: `24px`,\r\n      xl: `28px`,\r\n      xxl: `32px`,\r\n    },\r\n  \r\n    spacing: {\r\n      base: `20px`,\r\n      xs: `5px`,\r\n      sm: `10px`,\r\n      md: `30px`,\r\n      lg: `50px`,\r\n      xl: `100px`,\r\n    },\r\n  \r\n    easing: {\r\n      easeInCubic: `cubic-bezier(0.55, 0.055, 0.675, 0.19)`,\r\n      easeOutCubic: `cubic-bezier(0.215, 0.61, 0.355, 1)`,\r\n      easeInOutCubic: `cubic-bezier(0.215, 0.61, 0.355, 1)`,\r\n      easeInExpo: `cubic-bezier(0.95, 0.05, 0.795, 0.035)`,\r\n      easeOutExpo: `cubic-bezier(0.19, 1, 0.22, 1)`,\r\n      easeInOutExpo: `cubic-bezier(0.19, 1, 0.22, 1)`,\r\n      easeInBack: `cubic-bezier(0.6, -0.28, 0.735, 0.045)`,\r\n      easeOutBack: `cubic-bezier(0.175, 0.885, 0.32, 1.275)`,\r\n      easeInOutBack: `cubic-bezier(0.68, -0.55, 0.265, 1.55)`,\r\n    },\r\n  \r\n    transition: `all 0.25s cubic-bezier(0.3, 0, 0.4, 1);`,\r\n  \r\n    navWidth: '300px',\r\n    navHeight: '200px',\r\n  };\r\n  \r\n  export default theme;\r\n  ","export default __webpack_public_path__ + \"static/media/spotify_logo.1d5708b9.png\";","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport theme from '../styles/theme';\r\nimport logo from '../utils/spotify_logo.png';\r\nimport stylesheet from '../utils/stylesheet.module.css';\r\nconst { colors } = theme;\r\n\r\n//const LOGIN_URI = 'http://localhost:8888/login';\r\nconst LOGIN_URI = 'https://mighty-shore-31251.herokuapp.com/login';\r\n\r\n\r\nconst LoginButton = styled.a`\r\n  display: inline-block;\r\n  background-color: ${colors.green};\r\n  color: ${colors.white};\r\n  border-radius: 30px;\r\n  margin-top: 20px;\r\n  padding: 17px 35px;\r\n  margin: 20px 0 70px;\r\n  min-width: 160px;\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${colors.offGreen};\r\n    color: ${colors.white};\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst LoginScreen = () => (\r\n    <>\r\n        <div className={stylesheet.header}>\r\n            <img className={stylesheet.logo} src={logo} alt=\"BigCo Inc. logo\" width=\"200px\" height=\"60px\" align />\r\n        </div>\r\n        <div className={stylesheet.login}>\r\n            <h1>Spotify Profile</h1>\r\n            <LoginButton href={LOGIN_URI}>Login to Spotify</LoginButton>\r\n        </div>\r\n\r\n    </>\r\n);\r\n\r\nexport default LoginScreen;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getUserInfo} from '../spotify';\r\nimport { catchErrors } from '../utils';\r\n\r\n\r\n\r\nconst User = () => {\r\n  const [user, setUser] = useState(null);\r\n  /*const [followedArtists, setFollowedArtists] = useState(null);\r\n  const [playlists, setPlaylists] = useState(null);\r\n  const [topArtists, setTopArtists] = useState(null);\r\n  const [topTracks, setTopTracks] = useState(null);*/\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const { user/*, followedArtists, playlists, topArtists, topTracks*/ } = await getUserInfo();\r\n            setUser(user);\r\n            /*setFollowedArtists(followedArtists);\r\n            console.log(playlists);\r\n            setPlaylists(playlists);\r\n            setTopArtists(topArtists);\r\n            setTopTracks(topTracks);\r\n            */\r\n        };\r\n        catchErrors(fetchData());\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            user ? (\r\n                <>\r\n                <img src={ user.images[0].url } alt = \"Profil\" width=\"400\" height=\"400\" />\r\n                <h4> {user.display_name}</h4>\r\n                <h5> {user.email}</h5>\r\n                <h5> Followers : { user.followers.total } </h5>\r\n                {/*\r\n                  playlists ? (\r\n                    <>\r\n                  <h5> \r\n                    { \r\n                      playlists.items[0].name \r\n                    } \r\n                  </h5> \r\n                  <img src={ playlists.items[1].images[0].url } alt=\"Playlist\" />\r\n                  </>\r\n                  ) : (<h5>Pas de playlists</h5>) \r\n                  */\r\n                }\r\n                </>\r\n            ) : (\r\n                    <h4>Reconnectez-vous</h4>\r\n                )\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default User;\r\n","/// api URL ///\r\n\r\nimport axios from 'axios';\r\n\r\nconst apiURL = 'https://api.lyrics.ovh';\r\n\r\n\r\nexport function getLyr(Author, title) {\r\n    var h = apiURL + '/v1/' + Author + '/' + title;\r\n    return axios.get(h).then(response => response.data)\r\n}\r\n\r\n\r\n\r\n/*export const getLyr = (Author, title) => {\r\n    var request = require('request');\r\n\r\n    var h = apiURL + '/v1/' + Author + '/' + title;\r\n\r\n    console.log(h);\r\n    console.log(axios.get(h));\r\n    axios.get(h).then((response) => (response.data));\r\n    \r\n}\r\n*/\r\nexport default getLyr","import { css } from 'styled-components/macro';\r\nimport theme from './theme';\r\nconst { colors, fontSizes } = theme;\r\n\r\nconst mixins = {\r\n  flexCenter: css`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  `,\r\n\r\n  flexBetween: css`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  `,\r\n\r\n  engulf: css`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  `,\r\n\r\n  outline: css`\r\n    outline: 1px solid red;\r\n  `,\r\n\r\n  overflowEllipsis: css`\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    padding-right: 1px;\r\n  `,\r\n\r\n  coverShadow: css`\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n  `,\r\n\r\n  button: css`\r\n    display: inline-block;\r\n    color: ${colors.white};\r\n    font-weight: 700;\r\n    font-size: ${fontSizes.xs};\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n    border: 1px solid ${colors.white};\r\n    border-radius: 50px;\r\n    padding: 11px 24px;\r\n    cursor: pointer;\r\n    transition: ${theme.transition};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      color: ${colors.black};\r\n      background: ${colors.white};\r\n      outline: 0;\r\n    }\r\n  `,\r\n\r\n  greenButton: css`\r\n    display: inline-block;\r\n    background-color: ${colors.green};\r\n    color: ${colors.white};\r\n    font-weight: 700;\r\n    font-size: ${fontSizes.xs};\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n    border-radius: 50px;\r\n    padding: 11px 24px;\r\n    margin: 20px 0;\r\n    cursor: pointer;\r\n    transition: ${theme.transition};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: ${colors.offGreen};\r\n      outline: 0;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default mixins;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components/macro';\r\nimport theme from '../styles/theme';\r\nimport mixins from '../styles/mixins';\r\nconst { colors } = theme;\r\n\r\nconst Container = styled.div`\r\n  ${mixins.flexCenter};\r\n  width: 100%;\r\n  height: 90vh;\r\n`;\r\nconst dance = keyframes`\r\n  from {\r\n    height: 10px;\r\n  }\r\n  to {\r\n    height: 100%;\r\n  }\r\n`;\r\nconst Bars = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  overflow: hidden;\r\n  width: 100px;\r\n  min-width: 100px;\r\n  height: 50px;\r\n  margin: 0 auto;\r\n  z-index: 2;\r\n  position: relative;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\nconst Bar = styled.div`\r\n  width: 10px;\r\n  height: 5px;\r\n  margin: 0 2px;\r\n  background-color: ${colors.grey};\r\n  animation-name: ${dance};\r\n  animation-duration: 400ms;\r\n  animation-play-state: running;\r\n  animation-direction: alternate;\r\n  animation-timing-function: linear;\r\n  animation-iteration-count: infinite;\r\n  animation-delay: ${props => props.delay || '0ms'};\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <Bars>\r\n      <Bar delay=\"250ms\" />\r\n      <Bar delay=\"715ms\" />\r\n      <Bar delay=\"475ms\" />\r\n      <Bar delay=\"25ms\" />\r\n      <Bar delay=\"190ms\" />\r\n    </Bars>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getCurrentPlaying, getTrackInfo} from '../spotify';\r\nimport { catchErrors } from '../utils';\r\nimport getLyr from '../Lyrics/main';\r\nimport stylesheet from '../utils/stylesheet.module.css';\r\nimport Loader from './Loader';\r\n\r\nconst CurrentPlaying = () => {\r\n\r\n    const [Playing, setCurrentPlaying] = useState(null);\r\n    const [Lyrics, setLyrics] = useState('');\r\n    //const [Analysis, setAnalysis] = useState('');\r\n    const [Features, setFeatures] = useState('');\r\n    const [time, setTime] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n        const { data } = await getCurrentPlaying();\r\n        if (Playing == null || data.item.id !== Playing.item.id)\r\n        {\r\n            setCurrentPlaying(data);\r\n            if (data)\r\n            {\r\n                setLyrics('');\r\n                getLyr(data.item.artists[0].name, data.item.name, Lyrics).then(data => {\r\n                    console.log(data);\r\n                    console.log(data.lyrics);\r\n                    setLyrics(data.lyrics); \r\n                });\r\n            }\r\n        }\r\n    };\r\n    catchErrors(fetchData());\r\n    }, [time, Playing, Lyrics]);\r\n\r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n        setFeatures('');\r\n        if (Playing) {\r\n        const { audioAnalysis, audioFeatures } = await getTrackInfo(Playing.item.id);\r\n        console.log(\"Audio Analysis : \" + audioAnalysis);\r\n        console.log(\"Audio features : \" + audioFeatures);\r\n        setFeatures(audioFeatures);\r\n        }\r\n    };\r\n    catchErrors(fetchData());\r\n    }, [Playing]);\r\n    \r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            console.log('Run every seconds');\r\n            setTime(Date.now())}\r\n            , 1000);\r\n        \r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [time]);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={stylesheet.row}>\r\n            <div className={ stylesheet.columnLeft }>\r\n                    <div>\r\n                        {Playing ? (\r\n                            <div>\r\n                                <h4 className={stylesheet.current}> Song currently played :</h4>\r\n                                <img className={ stylesheet.songPlaying } src={ Playing.item.album.images[0].url } alt=\"Album\" />\r\n                                <h3> { Playing.item.name } -  { Playing.item.artists[0].name } </h3>\r\n                            </div>\r\n                        ) : (\r\n                                <h1>No current song playing</h1>\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            Features ? (\r\n                                <div>\r\n                                    {\r\n                                        <>\r\n                                            <h4 className={stylesheet.current}> Song informations :</h4>\r\n\r\n                                            <a href>Danceability : {Features.danceability} </a>\r\n                                            <br/>\r\n                                            <a href>Energy : {Features.energy} </a>\r\n                                            <br/>\r\n                                            <a href>Key : {Features.key} </a>\r\n                                            <br/>\r\n                                            <a href>Loudness : {Features.loudness} </a>\r\n                                            <br/>\r\n                                            <a href>Mode : {Features.mode} </a>\r\n                                            <br/>\r\n                                            <a href>Speechiness : {Features.speechiness} </a>\r\n                                            <br/>\r\n                                            <a href>acousticness : {Features.acousticness} </a>\r\n                                            <br/>\r\n                                            <a href>Instrumentalness : {Features.instrumentalness} </a>\r\n                                            <br/>\r\n                                            <a href>Livness : {Features.liveness} </a>\r\n                                            <br/>\r\n                                            <a href>Valence : {Features.valence} </a>\r\n                                            <br/>\r\n                                            <a href>Tempo : {Features.tempo} </a>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            ) :\r\n                                (\r\n                                    <h5>Aucune information sur le morceau</h5>\r\n                                )\r\n                        }\r\n                    </div>\r\n            </div>\r\n            <div className={ stylesheet.columnRight }>\r\n                {\r\n                        Lyrics ? (\r\n                        <>\r\n                        <h4 className={stylesheet.current}> Lyrics :</h4>\r\n                                <div className={ stylesheet.noScrollDiv }>\r\n                            {\r\n                                Lyrics.split('\\n').map((line, i) => (\r\n                                    <span key={i}>\r\n                                        {line}\r\n                                        <br />\r\n                                    </span>\r\n                                ))\r\n                            }\r\n                                </div>\r\n                        </>\r\n                    ) : (\r\n                        <div>\r\n                            <a href>Les paroles n'ont pas été trouvées</a>\r\n                            <Loader />\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurrentPlaying;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getUserInfo } from '../spotify';\r\nimport { catchErrors } from '../utils';\r\nimport stylesheet from '../utils/stylesheet.module.css';\r\nimport { logout } from '../spotify';\r\n\r\nconst UserProfile = () => {\r\n    const [user, setUser] = useState(null);\r\n    /*const [followedArtists, setFollowedArtists] = useState(null);\r\n    const [playlists, setPlaylists] = useState(null);\r\n    const [topArtists, setTopArtists] = useState(null);\r\n    const [topTracks, setTopTracks] = useState(null);*/\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const { user /*, followedArtists, playlists, topArtists, topTracks*/ } = await getUserInfo();\r\n            setUser(user);\r\n            /*setFollowedArtists(followedArtists);\r\n            setPlaylists(playlists);\r\n            setTopArtists(topArtists);\r\n            setTopTracks(topTracks);*/\r\n        };\r\n        catchErrors(fetchData());\r\n    }, []);\r\n\r\n    return (\r\n    <div>\r\n        { user ? (\r\n                <>\r\n                    <h4> {user.display_name}</h4>\r\n                    <h5> {user.email}</h5>\r\n                    <button className={ stylesheet.loginButton } onClick={ logout }>\r\n                        <a href>Logout</a>\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>Reconnectez-vous</h4>\r\n                    <button className={ stylesheet.loginButton } onClick={ logout }>Logout</button>\r\n                </>\r\n                )\r\n            }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react'; \r\nimport { Link } from '@reach/router';\r\nimport styled from 'styled-components/macro';\r\nimport theme from '../styles/theme';\r\nimport mixins from '../styles/mixins';\r\nimport UserProfile from './UserProfile.js'\r\n\r\nconst { colors } = theme;\r\nconst { fontSizes } = theme;\r\n\r\nconst isActive = ({ isCurrent }) => (isCurrent ? { className: 'active' } : null);\r\n\r\nconst Container = styled.nav`\r\n  ${mixins.coverShadow};\r\n  ${mixins.flexBetween};\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  margin-left:-40px;\r\n  width: ${theme.navWidth};\r\n  background-color: #000000;\r\n  text-align: center;\r\n  & > * {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style-type:none;\r\n`;\r\nconst MenuItem = styled.li`\r\n  color: ${colors.lightGrey};\r\n  font-size: 11px;\r\n  a {   \r\n    text-decoration: none;\r\n    display: block;\r\n    padding: 10% 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: lightGrey;\r\n    font-size: ${fontSizes.md};\r\n    &:hover,\r\n    &:focus,\r\n    &.active {\r\n      color: ${colors.white};\r\n      background-color: #282828;\r\n      border-bottom: 5px solid ${colors.green};\r\n    }\r\n  }\r\n  svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    color: lightGrey;\r\n  }\r\n`;\r\n\r\nconst MenuHeader = styled.li`\r\n  margin-top: 20px;\r\n  margin-bottom: 25px;\r\n  color: ${colors.white};\r\n  font-size: 11px;\r\n  border-bottom: 4px solid ${colors.green};\r\n  }\r\n`;\r\nconst NavLink = props => <Link getProps={isActive} {...props} />;\r\n\r\nconst Nav = () => (\r\n    <Container>\r\n        <Menu>\r\n            <MenuHeader>\r\n                <UserProfile/>\r\n            </MenuHeader>\r\n            <MenuItem>\r\n                <NavLink to=\"/\">\r\n                    <div>Accueil</div>\r\n                </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <NavLink to=\"playing\">\r\n                    <div>Playing</div>\r\n                </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <NavLink to=\"artists\">\r\n                    <div>Artists</div>\r\n                </NavLink>\r\n            </MenuItem>\r\n            \r\n            <MenuItem>\r\n                <NavLink to=\"stats\">\r\n                    <div>Songs</div>\r\n                </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <NavLink to=\"profil\">\r\n                    <div>Profil</div>\r\n                </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>\r\n            <a class=\"btn\" href=\"https://github.com/SebastienGt/spotify-analyzer\">GitHub</a>\r\n            </MenuItem>\r\n        </Menu>\r\n    </Container>\r\n);\r\n\r\nexport default Nav;\r\n","\r\n\r\nconst UserInfo = () => {\r\n    \r\n}\r\n\r\n\r\nexport default UserInfo;\r\n","import React from 'react';\r\n\r\n\r\nconst Playlist = () => {\r\n    return (\r\n    <>\r\n\r\n    </>\r\n\r\n);\r\n}\r\n\r\n\r\nexport default Playlist;","import React, { useState, useEffect } from 'react';\r\nimport { getTopArtistsShort } from '../spotify';\r\nimport { catchErrors } from '../utils';\r\n\r\nconst Artist = () => {\r\n    const [artists, setArtists] = useState(null);\r\n\r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n        const { data } = await getTopArtistsShort();\r\n        setArtists(data);\r\n    };\r\n    catchErrors(fetchData());\r\n    }, []);\r\n\r\n    const list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\r\n\r\n    return (\r\n        <>\r\n            <h1>Vos artistes les plus écoutés : </h1>\r\n            <div>\r\n                {   artists ? (\r\n                    <div>\r\n                        <ul>\r\n                        {\r\n                        list.map(item => \r\n                        <li key={ item.toString() } >\r\n                            <h2> { item + 1} </h2>\r\n                            <h2>{ artists.items[item].name}</h2>\r\n                            <img src={ artists.items[item].images[2].url } alt=\"Album\" />\r\n                        </li>\r\n                        )}\r\n                        </ul>\r\n                    </div>\r\n                ) : (\r\n                    <h1>No current stats on artists</h1>\r\n                )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Artist;","import React from 'react';\r\n\r\nconst Accueil = () => {\r\n  return (\r\n    <>\r\n      <h2 href>Bienvenue dans Spotify Analyzer !</h2>\r\n      <br/>\r\n      <a href>Nous avons créé ce site pour avoir les paroles des musiques Spotify que nous écoutions.</a>\r\n      <br/>\r\n      <a href>Nous espérons que le site vous plaira !</a>\r\n      <br/>\r\n      <br/>\r\n      <a href>Un projet de Sébastien Friedberg et Alexandre Gomez.</a>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Accueil;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getTopTracksShort } from '../spotify';\r\nimport { catchErrors } from '../utils';\r\n\r\nconst Stats = () => {\r\n    const [tracks, setTracks] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n        const { data } = await getTopTracksShort();\r\n        setTracks(data);\r\n        console.log(data);\r\n    }\r\n    catchErrors(fetchData());\r\n    }, []);\r\n\r\n    const list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\r\n\r\n    return (\r\n        <>\r\n            <h1>Vos titres les plus écoutés : </h1>\r\n            <div>\r\n                {   tracks ? (\r\n                        <div>\r\n                            <ul>\r\n                                {\r\n                                list.map(item =>\r\n                                <li key={ item.toString() } >\r\n                                    <h2> { item + 1 } </h2>\r\n                                    <h2> { tracks.items[item].name } </h2>\r\n                                    <img src={ tracks.items[item].album.images[1].url } alt = \"Tracks\" />\r\n                                </li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    ) : (\r\n                        <h1>No current stats on tracks</h1>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Stats;","import React from 'react';\r\nimport { Router } from '@reach/router';\r\nimport User from './User.js';\r\nimport CurrentPlaying from './CurrentPlaying';\r\nimport Nav from './Nav';\r\nimport logo from '../utils/spotify_logo.png';\r\nimport stylesheet from '../utils/stylesheet.module.css';\r\nimport UserInfo from './UserInfo.js';\r\nimport Playlist from './Playlist';\r\nimport Artist from './Artist';\r\n\r\nimport Accueil from './Accueil';\r\nimport Stats from './Stats';\r\n\r\nconst App = () => {\r\n    return (\r\n    <>\r\n      <div className={stylesheet.header}>\r\n        <img className={stylesheet.logo} src={logo} alt=\"BigCo Inc. logo\" width=\"200px\" height=\"60px\" align />\r\n      </div>\r\n      <Nav />\r\n      <div className={stylesheet.content}>\r\n        <Router primary={false}>\r\n          <UserInfo path=\"UserInfo\" />\r\n          <Accueil path=\"/\" />\r\n          <CurrentPlaying path=\"playing\" />\r\n          <Artist path=\"artists\" />\r\n          <Playlist path=\"playlist\" />\r\n          <User path=\"profil\" />\r\n          <Stats path=\"stats\" />\r\n        </Router>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { token } from '../spotify';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport LoginScreen from './LoginScreen';\r\nimport App from './App';\r\nimport styled from 'styled-components/macro';\r\n\r\nconst AppContainer = styled.div`\r\n  min-height: 90vh;\r\n`;\r\n\r\n\r\n\r\nconst Start = () => {\r\n    const [accessToken, setAccessToken] = useState('');\r\n  \r\n    useEffect(() => {\r\n      setAccessToken(token);\r\n    }, []);\r\n  \r\n    return (\r\n      <AppContainer>\r\n        {accessToken ? <App /> : <LoginScreen />}\r\n      </AppContainer>\r\n    );\r\n  };\r\n  \r\n\r\n\r\n  export default Start;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Start from './components/Start';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Start />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}